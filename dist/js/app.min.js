function urlBase64ToUint8Array(e){for(var n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),o=window.atob(n),i=new Uint8Array(o.length),a=0;a<o.length;++a)i[a]=o.charCodeAt(a);return i}var deferredPrompt,offlineTasks,apexServiceWorker=null,hasSubscribedNotifications=!1,pwa={};pwa.init={app:function(){"serviceWorker"in navigator?navigator.serviceWorker.register("/sw.js").then(function(e){apexServiceWorker=e,console.log("Service worker registered!"),pwa.init.ui()}).catch(pwa.promise.rejected):console.warn("Service workers are not supported by your browser."),localforage.getItem("offline-tasks").then(function(e){offlineTasks=e||[]}).catch(pwa.promise.rejected)},ui:function(){pwa.event.offline();var e=document.getElementById("SUBSCRIBE_NOTIFICATIONS");e&&("PushManager"in window?apexServiceWorker.pushManager.getSubscription().then(function(n){(hasSubscribedNotifications=null!==n)?(e.disabled=!0,e.textContent="Notifications enabled"):(e.disabled=!1,e.textContent="Enable notifications")}):(e.disabled=!0,e.textContent="Notifications are not supported"));var n=document.getElementById("INSTALL_APP");n&&(n.style.display=deferredPrompt?"inline-block":"none")}},pwa.install=function(){document.getElementById("INSTALL_APP");deferredPrompt.prompt(),deferredPrompt.userChoice.then(function(e){"accepted"===e.outcome?console.log("User accepted the A2HS prompt"):console.log("User dismissed the A2HS prompt"),deferredPrompt=null,pwa.init.ui()})},pwa.promise={something:function(e){return apex.server.process("something",{x01:e})},rejected:function(e){console.error("Promise is rejected:",e)}},pwa.call={something:function(e){navigator.onLine?pwa.promise.something(e).then(function(e){apex.message.alert(JSON.stringify(e))}).catch(pwa.promise.rejected):pwa.task.add(arguments),apex.item("P1_NAME").setValue("")}},pwa.task={add:function(e){offlineTasks.push({name:e.callee.name,arguments:Array.prototype.slice.call(e)}),localforage.setItem("offline-tasks",offlineTasks).then(function(e){}).catch(pwa.promise.rejected),pwa.event.offline()},run:function(){for(var e in offlineTasks)Object.prototype.hasOwnProperty.call(offlineTasks,e)&&(console.log("Invoking",offlineTasks[e].name,"(",offlineTasks[e].arguments,")"),pwa.call[offlineTasks[e].name].apply(null,offlineTasks[e].arguments));localforage.clear().then(function(){offlineTasks=[],console.log('Database "offline-tasks" is now empty.')}).catch(pwa.promise.rejected)}},pwa.event={online:function(e){if(navigator.onLine){var n=offlineTasks.length>0?"<br>Now running "+offlineTasks.length+" tasks.":"";apex.message.showPageSuccess("You are back online!"+n),pwa.task.run()}},offline:function(e){if(!navigator.onLine){$("#t_Alert_Success").remove();var n=[{type:"error",location:"page",message:'You have lost connection <span aria-hidden="true" class="fa fa-frown-o"></span>'}];for(var o in offlineTasks)Object.prototype.hasOwnProperty.call(offlineTasks,o)&&n.push({type:"error",location:"page",message:'<span aria-hidden="true" class="fa fa-spinner fa-anim-spin"></span> Waiting to reconnect to execute: '+offlineTasks[o].name});apex.message.clearErrors(),apex.message.showErrors(n)}}},window.addEventListener("online",pwa.event.online),window.addEventListener("offline",pwa.event.offline),window.addEventListener("beforeinstallprompt",function(e){e.preventDefault(),deferredPrompt=e,pwa.init.ui()}),window.addEventListener("appinstalled",function(e){console.log("App was installed",e)}),pwa.notification={ask:function(){!hasSubscribedNotifications&&"Notification"in window&&"PushManager"in window&&Notification.requestPermission(function(e){if("granted"===e){console.log("Notification permission granted!");var n=urlBase64ToUint8Array("BOFoGrYiN1P70-UMcQ9vbfCJl9x5MXfxqCBbBqOVvim_s63i9xpM9P0PwqHvfNAs2D1rKYFOlMXhD3_Rtuybl2o");apexServiceWorker.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:n}).then(function(e){return fetch("https://apex-pwa.firebaseio.com/notifications.json",{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json"},body:JSON.stringify(e)})}).then(function(e){e.ok&&(apexServiceWorker.showNotification("Successfully subscribed!",{body:"You have successfully subscribed to our APEX notification service.",icon:appImages+"images/icons/icon-96x96.png",badge:appImages+"images/icons/icon-96x96.png"}),pwa.init.ui())}).catch(pwa.promise.rejected)}else console.warn("Notification permission denied.")})}},pwa.init.app();
//# sourceMappingURL=app.min.js.map
